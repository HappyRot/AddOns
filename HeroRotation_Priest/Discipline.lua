local a,b=...local c=HeroDBC.DBC;local d=HeroLib;local e=HeroCache;local f=d.Unit;local g=f.Player;local h=f.Target;local i=f.Pet;local j=d.Spell;local k=d.Item;local l=HeroRotation;local m=l.AoEON;local n=l.CDsON;local o=l.Cast;local p=l.Commons.Everyone.num;local q=l.Commons.Everyone.bool;local r=j.Priest.Discipline;local s=k.Priest.Discipline;local t={}local u;local v,w;local x,y;local z=l.Commons.Everyone;local A={General=l.GUISettings.General,Commons=l.GUISettings.APL.Priest.Commons,Discipline=l.GUISettings.APL.Priest.Discipline}local function B()if r.PowerWordFortitude:IsCastable()and(g:BuffDown(r.PowerWordFortitudeBuff,true)or z.GroupBuffMissing(r.PowerWordFortitudeBuff))then if o(r.PowerWordFortitude,A.Commons.GCDasOffGCD.PowerWordFortitude)then return"power_word_fortitude precombat"end end;if r.Smite:IsCastable()then if o(r.Smite,nil,nil,not h:IsSpellInRange(r.Smite))then return"smite precombat 2"end end end;local function C()if r.ArcaneTorrent:IsCastable()and g:ManaPercentage()<=95 then if o(r.ArcaneTorrent,A.Commons.OffGCDasOffGCD.Racials)then return"arcane_torrent racials 2"end end;if r.BloodFury:IsCastable()then if o(r.Fireblood,A.Commons.OffGCDasOffGCD.Racials)then return"blood_fury racials 4"end end;if r.Berserking:IsCastable()then if o(r.Berserking,A.Commons.OffGCDasOffGCD.Racials)then return"berserking racials 6"end end;if r.ArcaneTorrent:IsCastable()then if o(r.ArcaneTorrent,A.Commons.OffGCDasOffGCD.Racials)then return"arcane_torrent racials 8"end end;if r.LightsJudgment:IsCastable()then if o(r.LightsJudgment,A.Commons.OffGCDasOffGCD.Racials,nil,not h:IsSpellInRange(r.LightsJudgment))then return"lights_judgment racials 10"end end;if r.Fireblood:IsCastable()then if o(r.Fireblood,A.Commons.OffGCDasOffGCD.Racials)then return"fireblood racials 12"end end;if r.AncestralCall:IsCastable()then if o(r.AncestralCall,A.Commons.OffGCDasOffGCD.Racials)then return"ancestral_call racials 14"end end;if r.BagofTricks:IsCastable()then if o(r.BagofTricks,A.Commons.OffGCDasOffGCD.Racials,nil,not h:IsSpellInRange(r.BagofTricks))then return"bag_of_tricks racials 16"end end end;local function D()if r.AscendedBlast:IsReady()and y<3 then if o(r.AscendedBlast,nil,A.Commons.DisplayStyle.Covenant,not h:IsSpellInRange(r.AscendedBlast))then return"ascended_blast boon 2"end end;if r.AscendedNova:IsReady()and y>=3 then if o(r.AscendedNova,nil,A.Commons.DisplayStyle.Covenant,not h:IsInRange(8))then return"ascended_nova boon 4"end end end;local function E()v=g:GetEnemiesInMeleeRange(12)x=g:GetEnemiesInMeleeRange(8)if m()then u=h:GetEnemiesInSplashRangeCount(10)w=#v;y=#x else u=1;w=1;y=1 end;if z.TargetIsValid()then if not g:AffectingCombat()then local F=B()if F then return F end end;if A.Commons.Enabled.Trinkets then local G=g:GetUseableTrinkets(t)if G then if o(G,nil,A.Commons.DisplayStyle.Trinkets)then return"Generic use_items for "..G:Name()end end end;if A.Commons.Enabled.Potions and s.PotionofSpectralIntellect:IsReady()and(g:BloodlustUp()or g:BuffUp(r.PowerInfusion)or h:TimeToDie()<=40)then if o(s.PotionofSpectralIntellect)then return"potion main 2"end end;local F=C()if F then return F end;if r.PowerInfusion:IsCastable()then if o(r.PowerInfusion,A.Discipline.GCDasOffGCD.PowerInfusion)then return"power_infusion main 42"end end;if r.DivineStar:IsCastable()then if o(r.DivineStar,nil,nil,not h:IsSpellInRange(r.DivineStar))then return"divine_star main 44"end end;if r.Halo:IsCastable()then if o(r.Halo)then return"divine_star main 11"end end;if r.Penance:IsCastable()then if o(r.Penance,nil,nil,not h:IsSpellInRange(r.Penance))then return"penance main 46"end end;if r.PowerWordSolace:IsCastable()then if o(r.PowerWordSolace,nil,nil,not h:IsSpellInRange(r.PowerWordSolace))then return"power_word_solace main 48"end end;if r.ShadowCovenant:IsCastable()and(g:Covenant()~="Kyrian"or not r.BoonoftheAscended:CooldownUp()and g:BuffDown(r.BoonoftheAscendedBuff))then if o(r.ShadowCovenant,A.Discipline.GCDasOffGCD.ShadowCovenant)then return"shadow_covenant main 50"end end;if r.Schism:IsCastable()then if o(r.Schism,nil,nil,not h:IsSpellInRange(r.Schism))then return"schism main 52"end end;if r.Mindgames:IsReady()then if o(r.Mindgames,nil,A.Commons.DisplayStyle.Covenant,not h:IsSpellInRange(r.Mindgames))then return"mindgames 57"end end;if r.FaeGuardians:IsCastable()then if o(r.FaeGuardians,nil,A.Commons.DisplayStyle.Covenant)then return"fae_guardians main "end end;if r.UnholyNova:IsCastable()then if o(r.UnholyNova,nil,A.Commons.DisplayStyle.Covenant)then return"unholy_nova main "end end;if r.BoonoftheAscended:IsCastable()then if o(r.BoonoftheAscended,nil,A.Commons.DisplayStyle.Covenant)then return"boon_of_the_ascended main 54"end end;if g:BuffUp(r.BoonoftheAscendedBuff)then local F=D()if F then return F end end;if r.Mindbender:IsCastable()then if o(r.Mindbender,A.Discipline.GCDasOffGCD.Mindbender)then return"mindbender main 56"end end;if r.SpiritShell:IsReady()then if o(r.SpiritShell)then return"spirit_shell main "end end;if r.PurgeTheWicked:IsCastable()and h:DebuffDown(r.PurgeTheWickedDebuff)then if o(r.PurgeTheWicked,nil,nil,not h:IsSpellInRange(r.PurgeTheWicked))then return"purge_the_wicked main 58"end end;if r.ShadowWordPain:IsCastable()and(h:DebuffDown(r.ShadowWordPainDebuff)and not r.PurgeTheWicked:IsAvailable())then if o(r.ShadowWordPain,nil,nil,not h:IsSpellInRange(r.ShadowWordPain))then return"shadow_word_pain main 60"end end;if r.Smite:IsCastable()and w<3 then if o(r.Smite,nil,nil,not h:IsSpellInRange(r.Smite))then return"smite main 70"end end;if r.HolyNova:IsCastable()and w>=3 then if o(r.HolyNova)then return"holy_nova main 72"end end;if r.ShadowWordPain:IsCastable()then if o(r.ShadowWordPain,nil,nil,not h:IsSpellInRange(r.ShadowWordPain))then return"shadow_word_pain main 74"end end;if g:BuffUp(r.ShadowCovenantBuff)then if l.CastAnnotated(r.Pool,false,"NO HOLY")then return"Shadow Covenant UP - No Holy Spells"end end;if l.CastAnnotated(r.Pool,false,"WAIT")then return"Wait/Pool Resources"end end end;local function H()l.Print("Discipline Priest rotation has not been updated for pre-patch 10.0. It may not function properly or may cause errors in-game.")end;l.SetAPL(256,E,H)