local a=HeroLib;local b=HeroCache;local c=a.Unit;local d=c.Player;local e=c.Pet;local f=c.Target;local g=a.Spell;local h=a.Item;local i=HeroRotation;local j=g.Priest.Discipline;local k=g.Priest.Shadow;local UnitPower=UnitPower;local l=Enum.PowerType.Insanity;local function m(n)if n then return 1 else return 0 end end;local function o(n)return n~=0 end;local p;p=a.AddCoreOverride("Spell.IsCastable",function(self,q,r,s,t,u)local v=p(self,q,r,s,t,u)if self==j.MindBlast or self==j.Schism then return v and not d:IsCasting(self)elseif self==j.Smite or self==j.DivineStar or self==j.Halo or self==j.Penance or self==j.PowerWordSolace then return v and not d:BuffUp(j.ShadowCovenantBuff)else return v end end,256)a.AddCoreOverride("Player.Insanity",function()local w=UnitPower("Player",l)if not d:IsCasting()then return w else if d:IsCasting(k.MindBlast)then return w+6 elseif d:IsCasting(k.VampiricTouch)or d:IsCasting(k.MindSpike)then return w+4 elseif d:IsCasting(k.MindFlay)then return w+12/k.MindFlay:BaseDuration()elseif d:IsCasting(k.DarkVoid)then return w+15 elseif d:IsCasting(k.DarkAscension)then return w+30 elseif d:IsCasting(k.VoidTorrent)then return w+60/k.VoidTorrent:BaseDuration()else return w end end end,258)local x;x=a.AddCoreOverride("Spell.IsReady",function(self,q,r,s,t,u)local v=x(self,q,r,s,t,u)if self==k.MindSpikeInsanity then return v and d:BuffStack(k.MindSpikeInsanityBuff)-m(d:IsCasting(k.MindSpikeInsanity))>0 else return v end end,258)local y;y=a.AddCoreOverride("Spell.IsCastable",function(self,q,r,s,t,u)local v=y(self,q,r,s,t,u)if self==k.VampiricTouch then return v and not k.ShadowCrash:InFlight()and(k.UnfurlingDarkness:IsAvailable()or not d:IsCasting(self))elseif self==k.MindBlast then return v and(self:Charges()>=2 or not d:IsCasting(self))elseif self==k.VoidEruption then return v and not d:IsCasting(self)elseif self==k.VoidBolt then return v or d:IsCasting(k.VoidEruption)else return v end end,258)local z;z=a.AddCoreOverride("Spell.InFlight",function(self)local v=z(self)if self==k.ShadowCrash then return k.ShadowCrash:TimeSinceLastCast()<k.ShadowCrash:TravelTime()else return v end end,258)