local a,b=...local c=HeroDBC.DBC;local d=HeroLib;local e=HeroCache;local f=d.Unit;local g=f.Player;local h=f.Target;local i=d.Spell;local j=d.MultiSpell;local k=d.Item;local l=d.Utils.num;local m=d.Utils.BoolToInt;local n=d.Utils.IntToBool;local o=d.Utils.ValueIsInArray;local p=HeroRotation;local q=p.AoEON;local r=p.CDsON;local s=p.Cast;local t=p.CastPooling;local u=p.CastLeftNameplate;local v=HeroRotationCharDB.Toggles[4]local w=HeroRotationCharDB.Toggles[5]local x=HeroRotationCharDB.Toggles[6]local y=HeroRotationCharDB.Toggles[12]local z=not HeroRotationCharDB.Toggles[15]local A=HeroRotationCharDB.Toggles[20]local B=HeroRotationCharDB.Toggles[21]local C=HeroRotationCharDB.Toggles[22]local D=HeroRotationCharDB.Toggles[23]local E=HeroRotationCharDB.Toggles[24]local F=HeroRotationCharDB.Toggles[25]local G=HeroRotationCharDB.Toggles[26]local H=HeroRotationCharDB.Toggles[27]local I=HeroRotationCharDB.Toggles[28]local J=HeroRotationCharDB.Toggles[29]local K=HeroRotationCharDB.Toggles[30]local L=HeroRotationCharDB.Toggles[54]local M=math.min;local pairs=pairs;local N=math.floor;local O=math.max;local P=p.Commons.Everyone;local Q=p.Commons.Rogue;local R={General=p.GUISettings.General,Commons=p.GUISettings.APL.Rogue.Commons,Assassination=p.GUISettings.APL.Rogue.Assassination}local S=i.Rogue.Assassination;local T=k.Rogue.Assassination;local U={}local V,W,X,Y;local Z,_,a0,a1;local a2;local a3,a4=2*g:SpellHaste(),1*g:SpellHaste()local a5,a6;local a7,a8,a9,aa,ab,ac,ad;local ae;local af,ag,ah,ai,aj,ak,al;local am=0;local an=Q.ReturnSpell()local ao=Q.ReturnSpellMO()local ap=g:GetEquipment()local aq=ap[13]and k(ap[13])or k(0)local ar=ap[14]and k(ap[14])or k(0)local function as()if aq:HasStatAnyDps()and(not ar:HasStatAnyDps()or aq:Cooldown()>=ar:Cooldown())then am=1 elseif ar:HasStatAnyDps()and(not aq:HasStatAnyDps()or ar:Cooldown()>aq:Cooldown())then am=2 else am=0 end end;as()d:RegisterForEvent(function()ap=g:GetEquipment()aq=ap[13]and k(ap[13])or k(0)ar=ap[14]and k(ap[14])or k(0)as()end,"PLAYER_EQUIPMENT_CHANGED")local function l(at)if at then return 1 else return 0 end end;S.Envenom:RegisterDamageFormula(function()return g:AttackPowerDamageMod()*a5*0.22*1.0*(h:DebuffUp(S.ShivDebuff)and 1.3 or 1)*(S.DeeperStratagem:IsAvailable()and 1.05 or 1)*(1+g:MasteryPct()/100)*(1+g:VersatilityDmgPct()/100)end)S.Mutilate:RegisterDamageFormula(function()return(g:AttackPowerDamageMod()+g:AttackPowerDamageMod(true))*0.485*1.0*(1+g:VersatilityDmgPct()/100)end)local function au()if g:BuffRemains(S.MasterAssassinBuff)==9999 then return g:GCDRemains()+3 end;return g:BuffRemains(S.MasterAssassinBuff)end;local function av()if g:BuffUp(S.ImprovedGarroteAura)then return g:GCDRemains()+3 end;return g:BuffRemains(S.ImprovedGarroteBuff)end;local function aw()if g:BuffUp(S.IndiscriminateCarnageAura)then return g:GCDRemains()+10 end;return g:BuffRemains(S.IndiscriminateCarnageBuff)end;local function ax()local ay=1;if S.Nightstalker:IsAvailable()and g:StealthUp(true,false)then ay=ay*(1+0.05*S.Nightstalker:TalentRank())end;return ay end;S.Rupture:RegisterPMultiplier(ax)local function az()local ay=1;if S.ImprovedGarrote:IsAvailable()and(g:BuffUp(S.ImprovedGarroteAura,nil,true)or g:BuffUp(S.ImprovedGarroteBuff,nil,true)or g:BuffUp(S.SepsisBuff,nil,true))then ay=ay*1.5 end;if S.Nightstalker:IsAvailable()and g:StealthUp(true,false)then ay=ay*(1+0.05*S.Nightstalker:TalentRank())end;return ay end;S.Garrote:RegisterPMultiplier(az)local function aA()if a0<2 then return false elseif R.Commons.UsePriorityRotation=="Always"then return true elseif R.Commons.UsePriorityRotation=="On Bosses"and h:IsInBossList()then return true elseif R.Commons.UsePriorityRotation=="Auto"then if g:InstanceDifficulty()==16 and h:NPCID()==138967 then return true end end;return false end;local function aB()if h:DebuffUp(S.Deathmark)or h:DebuffUp(S.Kingsbane)or g:BuffUp(S.ShadowDanceBuff)or h:DebuffUp(S.ShivDebuff)or S.ThistleTea:FullRechargeTime()<20 or g:BuffUp(S.Envenom)and g:BuffRemains(S.Envenom)<=2 or g:EnergyPercentage()>=80 or d.BossFilteredFightRemains("<=",90)then return true end;return false end;local function aC()if S.Deathmark:CooldownRemains()>S.Sepsis:CooldownRemains()and(d.BossFightRemainsIsNotValid()or d.BossFilteredFightRemains(">",S.Deathmark:CooldownRemains()))then return S.Deathmark:CooldownRemains()end;return S.Sepsis:CooldownRemains()end;local function aD(aE,i,aF)local aF=aF or i:PandemicThreshold()return aE:DebuffRefreshable(i,aF)end;local function aG(aH,aI,aJ,aK)local aL,aM=nil,aJ;local aN=h:GUID()for aO,aP in pairs(aK)do if aP:GUID()~=aN and P.UnitIsCycleValid(aP,aM,-aP:DebuffRemains(aH))and aI(aP)then aL,aM=aP,aP:TimeToDie()end end;if aL then if aL:GUID()==f("mouseover"):GUID()and R.Assassination.TargetSwap=="Mouseover"then if aH:ID()==703 then ao=1703 elseif aH:ID()==1943 then ao=11943 end elseif R.Assassination.TargetSwap=="AutoSwap"and aL:GUID()~=h:GUID()and not y then ao=9999 elseif aL:GUID()==h:GUID()then an=aH:ID()end;u(aL,aH)elseif R.Commons.RangedMultiDoT then aL,aM=nil,aJ;for aO,aP in pairs(_)do if aP:GUID()~=aN and P.UnitIsCycleValid(aP,aM,-aP:DebuffRemains(aH))and aI(aP)then aL,aM=aP,aP:TimeToDie()end end;if aL then if aL:GUID()==f("mouseover"):GUID()and R.Assassination.TargetSwap=="Mouseover"then if aH:ID()==703 then ao=1703 elseif aH:ID()==1943 then ao=11943 end elseif R.Assassination.TargetSwap=="AutoSwap"and aL:GUID()~=h:GUID()and not y then ao=9999 elseif aL:GUID()==h:GUID()then an=aH:ID()end;u(aL,aH)end end end;local function aQ(aR,aS,aT)local aU=aS(h)if aR=="first"and aU~=0 then return h end;local aL,aV=nil,0;local function aW(aK)for aO,aP in pairs(aK)do local aX=aS(aP)if not aL and aR=="first"then if aX~=0 then aL,aV=aP,aX end elseif aR=="min"then if not aL or aX<aV then aL,aV=aP,aX end elseif aR=="max"then if not aL or aX>aV then aL,aV=aP,aX end end;if aL and aX==aV and aP:TimeToDie()>aL:TimeToDie()then aL,aV=aP,aX end end end;aW(a1)if R.Commons.RangedMultiDoT then aW(_)end;if aL and aV==aU and aT(h)then return h end;if aL and aT(aL)then return aL end;return nil end;local function aY(aZ,a_,b0)local b1=h:TimeToDie()if not d.BossFightRemainsIsNotValid()then b1=d.BossFightRemains()elseif b1<b0 then return false end;if N((b1-b0)/aZ)>N((b1-b0-a_)/aZ)then return true end;return false end;local function b2(aE)if aE:DebuffUp(S.SerratedBoneSpikeDebuff)then return 1000000 end;return aE:TimeToDie()end;local function b3(aE)if not aE:DebuffUp(S.SerratedBoneSpikeDebuff)and aE:IsInMeleeRange(10)and aE:GUID()==f("mouseover"):GUID()and R.Assassination.TargetSwap=="Mouseover"then ao=1328547;return true elseif not aE:DebuffUp(S.SerratedBoneSpikeDebuff)and aE:IsInMeleeRange(10)and R.Assassination.TargetSwap=="AutoSwap"and aE:GUID()~=h:GUID()and not y then ao=9999;return true elseif not aE:DebuffUp(S.SerratedBoneSpikeDebuff)and aE:IsInMeleeRange(10)and aE:GUID()==h:GUID()then an=328547;return true elseif not aE:DebuffUp(S.SerratedBoneSpikeDebuff)and aE:IsInMeleeRange(10)then return true end end;local function b4()if S.BloodFury:IsReady()and r()and R.Commons.Enabled.Racials then if p.Cast(S.BloodFury,nil)then an=20572;return"Cast Blood Fury"end end;if S.Berserking:IsReady()and r()and R.Commons.Enabled.Racials then if p.Cast(S.Berserking,nil)then an=26297;return"Cast Berserking"end end;if S.Fireblood:IsReady()and r()and R.Commons.Enabled.Racials then if p.Cast(S.Fireblood,nil)then an=265221;return"Cast Fireblood"end end;if S.AncestralCall:IsReady()and r()and R.Commons.Enabled.Racials then if p.Cast(S.AncestralCall,nil)then an=274738;return"Cast Ancestral Call"end end end;local function b5()if S.ShadowDance:IsCastable()and not S.Kingsbane:IsAvailable()and r()and not B and h:IsInMeleeRange(10)and not g:IsTanking(h)then if S.ImprovedGarrote:IsAvailable()and S.Garrote:CooldownUp()and(h:PMultiplier(S.Garrote)<=1 or aD(h,S.Garrote))and(S.Deathmark:AnyDebuffUp()or S.Deathmark:CooldownRemains()<12 or S.Deathmark:CooldownRemains()>60)and a6>=math.min(a0,4)then if R.Commons.ShowPooling and g:EnergyPredicted()<45 then if s(S.PoolEnergy)then an=999999;return"Pool for Shadow Dance (Garrote)"end end;if s(S.ShadowDance,nil)then an=185313;return"Cast Shadow Dance (Garrote)"end end;if not S.ImprovedGarrote:IsAvailable()and S.MasterAssassin:IsAvailable()and not aD(h,S.Rupture)and h:DebuffRemains(S.Garrote)>3 and(h:DebuffUp(S.Deathmark)or S.Deathmark:CooldownRemains()>60)and(h:DebuffUp(S.ShivDebuff)or h:DebuffRemains(S.Deathmark)<4 or h:DebuffUp(S.Sepsis))and h:DebuffRemains(S.Sepsis)<3 then if s(S.ShadowDance,nil)then an=185313;return"Cast Shadow Dance (Master Assassin)"end end end;if S.Vanish:IsCastable()and not g:IsTanking(h)then if S.ImprovedGarrote:IsAvailable()and not S.MasterAssassin:IsAvailable()and S.Garrote:CooldownUp()and not Q.Exsanguinated(h,S.Garrote)and(h:PMultiplier(S.Garrote)<=1 or aD(h,S.Garrote))then if(S.Deathmark:AnyDebuffUp()or S.Deathmark:CooldownRemains()<4)and a6>=math.min(a0,4)then if R.Commons.ShowPooling and g:EnergyPredicted()<45 then if s(S.PoolEnergy)then an=999999;return"Pool for Vanish (Garrote Deathmark)"end end;if s(S.Vanish,nil)then an=1856;return"Cast Vanish (Garrote Deathmark)"end end;if a0>3-m(S.IndiscriminateCarnage:IsAvailable())then if R.Commons.ShowPooling and g:EnergyPredicted()<45 then if s(S.PoolEnergy)then return"Pool for Vanish (Garrote Deathmark)"end end;if s(S.Vanish,nil)then an=1856;return"Cast Vanish (Garrote Cleave)"end end end;if S.MasterAssassin:IsAvailable()and S.Kingsbane:IsAvailable()and h:DebuffUp(S.Kingsbane)and h:DebuffRemains(S.Kingsbane)<=3 and h:DebuffUp(S.Deathmark)and h:DebuffRemains(S.Deathmark)<=3 then if s(S.Vanish,nil)then an=1856;return"Cast Vanish (Kingsbane)"end end;if not S.ImprovedGarrote:IsAvailable()and S.MasterAssassin:IsAvailable()and not aD(h,S.Rupture)and h:DebuffRemains(S.Garrote)>3 and h:DebuffUp(S.Deathmark)and(h:DebuffUp(S.ShivDebuff)or h:DebuffRemains(S.Deathmark)<4 or h:DebuffUp(S.Sepsis))and h:DebuffRemains(S.Sepsis)<3 then if s(S.Vanish,nil)then an=1856;return"Cast Vanish (Master Assassin)"end end end end;local function b6()if not Y then return end;if not p.CDsON()then return end;if S.Sepsis:IsReady()and h:DebuffRemains(S.Rupture)>20 and(not S.ImprovedGarrote:IsAvailable()and h:DebuffUp(S.Garrote)or S.ImprovedGarrote:IsAvailable()and S.Garrote:CooldownUp()and h:PMultiplier(S.Garrote)<=1)and(h:FilteredTimeToDie(">",10)or d.BossFilteredFightRemains("<=",10))then if s(S.Sepsis,nil,true)then an=328305;return"Cast Sepsis"end end;if not g:StealthUp(true,false)then if aq:IsReady()and not o(U,aq:ID())and(am==1 and(S.Deathmark:AnyDebuffUp()or d.BossFilteredFightRemains("<",20))or am==2 and(not ar:IsReady()or S.Deathmark:CooldownRemains()>20)or am==0)then if p.Cast(ar,nil,nil)then if aq:ID()==TopTrinketID and R.Commons.Enabled.TopTrinket then an=24;return"Generic use_items for "..aq:Name()elseif aq:ID()==BotTrinketID and R.Commons.Enabled.BottomTrinket then an=25;return"Generic use_items for "..aq:Name()end end elseif ar:IsReady()and not o(U,ar:ID())and(am==2 and(S.Deathmark:AnyDebuffUp()or d.BossFilteredFightRemains("<",20))or am==1 and(not aq:IsReady()or S.Deathmark:CooldownRemains()>20)or am==0)then if p.Cast(ar,nil,nil)then if ar:ID()==TopTrinketID and R.Commons.Enabled.TopTrinket then an=24;return"Generic use_items for "..ar:Name()elseif ar:ID()==BotTrinketID and R.Commons.Enabled.BottomTrinket then an=25;return"Generic use_items for "..ar:Name()end end end end;if S.Deathmark:IsCastable()then if h:DebuffUp(S.Rupture)and g:BuffUp(S.Envenom)and not S.Deathmark:AnyDebuffUp()and(not S.MasterAssassin:IsAvailable()or h:DebuffUp(S.Garrote))and(not S.Kingsbane:IsAvailable()or S.Kingsbane:CooldownRemains()<=2 and g:BuffUp(S.Envenom))or d.BossFilteredFightRemains("<=",20)then if s(S.Deathmark,nil)then an=360194;return"Cast Deathmark"end end end;if S.Shiv:IsReady()and not h:DebuffUp(S.ShivDebuff)and h:DebuffUp(S.Garrote)and h:DebuffUp(S.Rupture)then if d.BossFilteredFightRemains("<=",S.Shiv:Charges()*8)then if s(S.Shiv,nil)then an=5938;return"Cast Shiv (End of Fight)"end end;if S.Kingsbane:IsAvailable()then if g:BuffUp(S.Envenom)and(h:DebuffUp(S.Kingsbane)or S.Kingsbane:CooldownUp()or h:DebuffUp(S.Deathmark))and(not S.CrimsonTempest:IsAvailable()or al or h:DebuffUp(S.CrimsonTempest))then if s(S.Shiv,nil)then an=5938;return"Cast Shiv (Kingsbane)"end end end;if S.ArterialPrecision:IsAvailable()and S.Deathmark:AnyDebuffUp()then if s(S.Shiv,nil)then an=5938;return"Cast Shiv (Arterial Precision)"end end;if not S.Kingsbane:IsAvailable()and not S.ArterialPrecision:IsAvailable()then if S.Sepsis:IsAvailable()then if S.Shiv:ChargesFractional()>0.9+m(S.LightweightShiv:IsAvailable())and ag>5 or h:DebuffUp(S.Sepsis)or h:DebuffUp(S.Deathmark)then if s(S.Shiv,nil)then an=5938;return"Cast Shiv (Sepsis)"end end else if not S.CrimsonTempest:IsAvailable()or al or h:DebuffUp(S.CrimsonTempest)then if s(S.Shiv,nil)then an=5938;return"Cast Shiv"end end end end end;if R.Commons.Enabled.Potions and r()and z and((g:BloodlustUp()or d.BossFightRemains()<=30 or h:DebuffUp(S.Deathmark))and not p.GUISettings.General.HoldPotforBL or p.GUISettings.General.HoldPotforBL and g:BloodlustUp())then local b7=P.PotionSelected()if b7 and b7:IsReady()then if s(b7,nil,nil)then an=37;return"potion cooldowns 2"end end end;if S.ShadowDance:IsCastable()and S.Kingsbane:IsAvailable()and S.Kingsbane:CooldownRemains()<=2 and g:BuffUp(S.Envenom)then if s(S.ShadowDance,nil)then an=185313;return"Cast Shadow Dance (Kingsbane Sync)"end end;if S.Kingsbane:IsReady()and(h:DebuffUp(S.ShivDebuff)or S.Shiv:CooldownRemains()<6)and g:BuffUp(S.Envenom)and(S.Deathmark:CooldownRemains()>=50 or h:DebuffUp(S.Deathmark))then if s(S.Kingsbane,nil)then an=385627;return"Cast Kingsbane"end end;if S.ThistleTea:IsCastable()and not g:BuffUp(S.ThistleTea)and(g:EnergyDeficit()>=100+ai and(not S.Kingsbane:IsAvailable()or S.ThistleTea:Charges()>=2)or(h:DebuffUp(S.Kingsbane)and h:DebuffRemains(S.Kingsbane)<6 or not S.Kingsbane:IsAvailable()and S.Deathmark:AnyDebuffUp())or d.BossFilteredFightRemains("<",S.ThistleTea:Charges()*6))then if p.Cast(S.ThistleTea,nil)then an=381623;return"Cast Thistle Tea"end end;if S.Deathmark:AnyDebuffUp()and not a2 then if a2 then b4()else a2=b4()end end;if not g:StealthUp(true,true)and av()<=0 and au()<=0 then if a2 then b5()else a2=b5()end end;if S.ColdBlood:IsReady()and g:DebuffDown(S.ColdBlood)and a5>=4 and not a2 then if s(S.ColdBlood,nil)then an=382245;return"Cast Cold Blood"end end;return a2 end;local function b8()if S.Kingsbane:IsAvailable()and g:BuffUp(S.Envenom)then if S.Shiv:IsReady()and(h:DebuffUp(S.Kingsbane)or S.Kingsbane:CooldownUp())and h:DebuffDown(S.ShivDebuff)then if s(S.Shiv,nil)then an=5938;return"Cast Shiv (Stealth Kingsbane)"end end;if S.Kingsbane:IsReady()and g:BuffRemains(S.ShadowDanceBuff)>=2 then if s(S.Kingsbane,nil)then an=385627;return"Cast Kingsbane (Dance)"end end end;if a5>=4 then if h:DebuffUp(S.Kingsbane)and g:BuffRemains(S.Envenom)<=3 then if s(S.Envenom,nil,nil,not X)then an=32645;return"Cast Envenom (Stealth Kingsbane)"end end;if al and au()>0 and g:BuffDown(S.ShadowDanceBuff)then if s(S.Envenom,nil,nil,not X)then an=32645;return"Cast Envenom (Master Assassin)"end end end;if S.Garrote:IsCastable()and av()>0 then local function b9(aE)return aE:DebuffRemains(S.Garrote)end;local function ba(aE)if not Q.WillLoseExsanguinate(aE,S.Garrote)and(aE:PMultiplier(S.Garrote)<=1 or aE:DebuffRemains(S.Garrote)<12/Q.ExsanguinatedRate(aE,S.Garrote))and(aE:FilteredTimeToDie(">",2,-aE:DebuffRemains(S.Garrote))or aE:TimeToDieIsNotValid())and Q.CanDoTUnit(aE,aa)then if aE:GUID()==f("mouseover"):GUID()and R.Assassination.TargetSwap=="Mouseover"then ao=1703;return true elseif R.Assassination.TargetSwap=="AutoSwap"and aE:GUID()~=h:GUID()and not y then ao=9999;return true elseif aE:GUID()==h:GUID()then an=703;return true else return true end end end;if p.AoEON()then local bb=aQ("min",b9,ba)if bb and bb:GUID()~=h:GUID()then u(bb,S.Garrote)end end;if ba(h)then if s(S.Garrote,nil,nil,not X)then an=703;return"Cast Garrote (Improved Garrote)"end end;if a6>=5 and g:BuffDown(S.ShadowDanceBuff)and(h:PMultiplier(S.Garrote)<=1 or h:DebuffUp(S.Deathmark)and au()<3)then if s(S.Garrote,nil,nil,not X)then an=703;return"Cast Garrote (Improved Garrote Low CP)"end end end;if a5>=4 and h:PMultiplier(S.Rupture)<=1 and(g:BuffUp(S.ShadowDanceBuff)or h:DebuffUp(S.Deathmark))then if s(S.Rupture,nil,nil,not X)then an=1943;return"Cast Rupture (Nightstalker)"end end end;local function bc()local bd=S.ScentOfBlood:IsAvailable()and g:BuffStack(S.ScentOfBloodBuff)>=M(20,S.ScentOfBlood:TalentRank()*2*a0)or false;if p.AoEON()and S.CrimsonTempest:IsReady()and a0>=2 and a5>=4 and ai>25 and not S.Deathmark:IsReady()then for aO,aP in pairs(_)do if aP:FilteredTimeToDie(">",6,-h:DebuffRemains(S.CrimsonTempest))then if s(S.CrimsonTempest)then an=121411;return"Cast Crimson Tempest (AoE High Energy)"end end end end;if S.Garrote:IsCastable()and a6>=1 then local function be(aE)return aD(aE,S.Garrote)and aE:PMultiplier(S.Garrote)<=1 end;if be(h)and Q.CanDoTUnit(h,aa)and(h:FilteredTimeToDie(">",12,-h:DebuffRemains(S.Garrote))or h:TimeToDieIsNotValid())then if t(S.Garrote,nil,not X)then an=703;return"Pool for Garrote (ST)"end end;if p.AoEON()and not ak and a0>=2 then aG(S.Garrote,be,12,a1)end end;if S.Rupture:IsReady()and a5>=4 then ab=4+m(S.DashingScoundrel:IsAvailable())*5+m(S.Doomblade:IsAvailable())*5+m(ak)*6;local function bf(aE)return aD(aE,S.Rupture,a7)and aE:PMultiplier(S.Rupture)<=1 and(aE:FilteredTimeToDie(">",ab,-aE:DebuffRemains(S.Rupture))or aE:TimeToDieIsNotValid())end;if bf(h)and Q.CanDoTUnit(h,a9)then if s(S.Rupture,nil,nil,not X)then an=1943;return"Cast Rupture (Refresh)"end end;if p.AoEON()and(not ak or not bd)then aG(S.Rupture,bf,ab,a1)end end;if S.Garrote:IsCastable()and a6>=1 and au()<=0 and(h:PMultiplier(S.Garrote)<=1 or h:DebuffRemains(S.Garrote)<a3 and a0>=3)and(h:DebuffRemains(S.Garrote)<a3*2 and a0>=3)and(h:FilteredTimeToDie(">",4,-h:DebuffRemains(S.Garrote))or h:TimeToDieIsNotValid())then if s(S.Garrote,nil,nil,not X)then an=703;return"Garrote (Fallback)"end end;return false end;local function bg()if S.Envenom:IsReady()and a5>=4 and(af or h:DebuffStack(S.AmplifyingPoisonDebuff)>=20 or a5>Q.CPMaxSpend()or not al)then if s(S.Envenom,nil,nil,not X)then an=32645;return"Cast Envenom"end end;if not(a6>1 or af or not al)then return false end;if not al and S.CausticSpatter:IsAvailable()and h:DebuffUp(S.Rupture)and h:DebuffRemains(S.CausticSpatterDebuff)<=2 then if S.Mutilate:IsCastable()then if s(S.Mutilate,nil,nil,not X)then an=1329;return"Cast Mutilate (Casutic)"end end;if(S.Ambush:IsCastable()or S.AmbushOverride:IsCastable())and(g:StealthUp(true,true)or g:BuffUp(S.BlindsideBuff))then if s(S.Ambush,nil,nil,not X)then an=8676;return"Cast Ambush (Caustic)"end end end;if S.SerratedBoneSpike:IsReady()then if not h:DebuffUp(S.SerratedBoneSpikeDebuff)then if s(S.SerratedBoneSpike,nil,R.Commons.CovenantDisplayStyle,not Y)then return"Cast Serrated Bone Spike"end else if p.AoEON()then if P.CastTargetIf(S.SerratedBoneSpike,Z,"min",b2,b3)then return"Cast Serrated Bone (AoE)"end end;if au()<0.8 then if d.BossFightRemains()<=5 or S.SerratedBoneSpike:MaxCharges()-S.SerratedBoneSpike:ChargesFractional()<=0.25 then if s(S.SerratedBoneSpike,nil,true,not Y)then an=328547;return"Cast Serrated Bone Spike (Dump Charge)"end elseif not al and h:DebuffUp(S.ShivDebuff)then if s(S.SerratedBoneSpike,nil,true,not Y)then an=328547;return"Cast Serrated Bone Spike (Shiv)"end end end end end;if r()and S.EchoingReprimand:IsReady()then if s(S.EchoingReprimand,nil,nil,not X)then an=323547;return"Cast Echoing Reprimand"end end;if S.FanofKnives:IsCastable()then if p.AoEON()and a0>=1 and(not ae and a0>=2+m(g:StealthUp(true,false))+m(S.DragonTemperedBlades:IsAvailable()))then if t(S.FanofKnives)then an=51723;return"Cast Fan of Knives"end end;if p.AoEON()and g:BuffUp(S.DeadlyPoison)and a0>=3 then for aO,aP in pairs(_)do if not aP:DebuffUp(S.DeadlyPoisonDebuff,true)and(not ae or aP:DebuffUp(S.Garrote)or aP:DebuffUp(S.Rupture))then if t(S.FanofKnives)then an=5172;return"Cast Fan of Knives (DP Refresh)"end end end end end;if(S.Ambush:IsCastable()or S.AmbushOverride:IsCastable())and(g:StealthUp(true,true)or g:BuffUp(S.BlindsideBuff)or g:BuffUp(S.SepsisBuff))and(h:DebuffDown(S.Kingsbane)or h:DebuffDown(S.Deathmark)or g:BuffUp(S.BlindsideBuff))then if t(S.Ambush,nil,not X)then an=8676;return"Cast Ambush"end end;if S.Mutilate:IsCastable()and a0==2 and h:DebuffDown(S.DeadlyPoisonDebuff,true)and h:DebuffDown(S.AmplifyingPoisonDebuff,true)then local aN=h:GUID()for aO,aP in pairs(a1)do if aP:GUID()~=aN and(aP:DebuffUp(S.Garrote)or aP:DebuffUp(S.Rupture))and not aP:DebuffUp(S.DeadlyPoisonDebuff,true)and not aP:DebuffUp(S.AmplifyingPoisonDebuff,true)then if aP:GUID()==f("mouseover"):GUID()and R.Assassination.TargetSwap=="Mouseover"then ao=11329 elseif R.Assassination.TargetSwap=="AutoSwap"and aP:GUID()~=h:GUID()and not y then ao=9999 elseif aP:GUID()==h:GUID()then an=1329 end;u(aP,S.Mutilate)break end end end;if S.Mutilate:IsCastable()then if t(S.Mutilate,nil,not X)then an=1329;return"Cast Mutilate"end end;return false end;local function bh()x=HeroRotationCharDB.Toggles[6]v=HeroRotationCharDB.Toggles[4]w=HeroRotationCharDB.Toggles[5]y=HeroRotationCharDB.Toggles[12]z=not HeroRotationCharDB.Toggles[15]A=HeroRotationCharDB.Toggles[20]B=HeroRotationCharDB.Toggles[21]C=HeroRotationCharDB.Toggles[22]D=HeroRotationCharDB.Toggles[23]E=HeroRotationCharDB.Toggles[24]F=HeroRotationCharDB.Toggles[25]G=HeroRotationCharDB.Toggles[26]H=HeroRotationCharDB.Toggles[27]I=HeroRotationCharDB.Toggles[28]J=HeroRotationCharDB.Toggles[29]K=HeroRotationCharDB.Toggles[30]L=HeroRotationCharDB.Toggles[54]TopTrinketID=GetInventoryItemID("player",13)BotTrinketID=GetInventoryItemID("player",14)if not R.Commons.Enabled.TopTrinket and not R.Commons.Enabled.BotTrinket then OnUseExcludes={TopTrinketID,BotTrinketID,T.CacheOfAcquiredTreasures:ID()}elseif not R.Commons.Enabled.TopTrinket and R.Commons.Enabled.BotTrinket then OnUseExcludes={TopTrinketID,T.CacheOfAcquiredTreasures:ID()}elseif not R.Commons.Enabled.BotTrinket and R.Commons.Enabled.TopTrinket then OnUseExcludes={BotTrinketID,T.CacheOfAcquiredTreasures:ID()}end end;local function bi()V=S.AcrobaticStrikes:IsAvailable()and 8 or 5;W=S.AcrobaticStrikes:IsAvailable()and 10 or 13;X=h:IsInMeleeRange(V)Y=h:IsInMeleeRange(W)if q()then Z=g:GetEnemiesInRange(30)_=g:GetEnemiesInMeleeRange(W)a0=#_;a1=g:GetEnemiesInMeleeRange(V)else Z={}_={}a0=1;a1={}end;a3,a4=2*g:SpellHaste(),1*g:SpellHaste()a5=Q.EffectiveComboPoints(g:ComboPoints())a6=g:ComboPointsMax()-a5;a7=(4+a5*4)*0.3;a8=(2+a5*2)*0.3;a9=S.Envenom:Damage()*R.Assassination.EnvenomDMGOffset;aa=S.Mutilate:Damage()*R.Assassination.MutilateDMGOffset;ae=aA()a2=bh()if a2 then return a2 end;if ao>0 then ao=0 end;if an>0 then an=0 end;an=Q.ReturnSpell()ao=Q.ReturnSpellMO()a2=Q.CrimsonVial()if a2 then return a2 end;a2=Q.Feint()if a2 then return a2 end;local bj=g:AffectingCombat()and 180 or 900;local bk;if i(8679):IsAvailable()and(R.Assassination.LethalPoison1=="Wound Poison"or S.DragonTemperedBlades:IsAvailable()and R.Assassination.LethalPoison2=="Wound Poison")then bk=g:BuffRemains(i(8679))if bk<bj and not g:IsCasting(i(8679))then if p.Cast(i(8679))then an=203;return"Wound Poison Refresh"end end elseif i(2823):IsAvailable()and(R.Assassination.LethalPoison1=="Deadly Poison"or S.DragonTemperedBlades:IsAvailable()and R.Assassination.LethalPoison2=="Deadly Poison")then bk=g:BuffRemains(i(2823))if bk<bj and not g:IsCasting(i(2823))then if p.Cast(i(2823))then an=208;return"Deadly Poison Refresh"end end elseif i(315584):IsAvailable()and(R.Assassination.LethalPoison1=="Instant Poison"or S.DragonTemperedBlades:IsAvailable()and R.Assassination.LethalPoison2=="Instant Poison")then bk=g:BuffRemains(i(315584))if bk<bj and not g:IsCasting(i(315584))then if p.Cast(i(315584))then an=205;return"Instant Poison Refresh"end end elseif i(381664):IsAvailable()and(R.Assassination.LethalPoison1=="Amplifying Poison"or S.DragonTemperedBlades:IsAvailable()and R.Assassination.LethalPoison2=="Amplifying Poison")then bk=g:BuffRemains(i(381664))if bk<bj and not g:IsCasting(i(381664))then if p.Cast(i(381664))then an=209;return"Amplifying Poison Refresh"end end end;if i(381637):IsAvailable()and(R.Assassination.NonLethalPoison1=="Atrophic Poison"or S.DragonTemperedBlades:IsAvailable()and R.Assassination.NonLethalPoison2=="Atrophic Poison")then bk=g:BuffRemains(i(381637))if bk<bj and not g:IsCasting(i(381637))then if p.Cast(i(381637))then an=381637;return"Atropic Poison Refresh"end end elseif i(5761):IsAvailable()and(R.Assassination.NonLethalPoison1=="Numbing Poison"or S.DragonTemperedBlades:IsAvailable()and R.Assassination.NonLethalPoison2=="Numbing Poison")then bk=g:BuffRemains(i(5761))if bk<bj and not g:IsCasting(NumbingPoison)then if p.Cast(i(5761))then an=204;return"Numbing Poison Refresh"end end end;if not g:AffectingCombat()and not g:IsDeadOrGhost()then if not g:BuffUp(Q.VanishBuffSpell())then a2=Q.Stealth(Q.StealthSpell())if a2 then return a2 end end;if not g:BuffUp(S.SliceandDice)then if S.SliceandDice:IsReady()and a5>=2 then if s(S.SliceandDice)then an=5171;return"Cast Slice and Dice"end end end end;Q.MfDSniping(S.MarkedforDeath)if P.TargetIsValid()and(g:AffectingCombat()and not h:DebuffUp(S.Sap)or x)then if a2 then return a2 end;ah=Q.PoisonedBleeds()ai=g:EnergyRegen()+ah*6/(2*g:SpellHaste())aj=g:EnergyDeficit()/ai;ak=ai>35;al=a0<2;if g:StealthUp(true,false)or av()>0 then a2=b8()if a2 then return a2 .." (Stealthed)"end end;a2=b6()if a2 then return a2 end;if not g:BuffUp(S.SliceandDice)and h:IsInMeleeRange(10)then if S.SliceandDice:IsReady()and g:ComboPoints()>=2 or not S.CutToTheChase:IsAvailable()and g:ComboPoints()>=4 and g:BuffRemains(S.SliceandDice)<(1+g:ComboPoints())*1.8 then if s(S.SliceandDice)then an=5171;return"Cast Slice and Dice"end end elseif Y and S.CutToTheChase:IsAvailable()then if S.Envenom:IsReady()and h:IsInMeleeRange(10)and g:BuffRemains(S.SliceandDice)<5 and g:ComboPoints()>=4 then if s(S.Envenom,nil,nil,not X)then an=32645;return"Cast Envenom (CttC)"end end else if S.PoisonedKnife:IsCastable()and h:IsInRange(30)and not g:StealthUp(true,true)and g:AffectingCombat()and a0==0 and g:EnergyTimeToMax()<=g:GCD()*1.5 then if s(S.PoisonedKnife)then an=185565;return"Cast Poisoned Knife"end end end;a2=bc()if a2 then return a2 end;a2=bg()if a2 then return a2 end;if r()and R.Commons.Enabled.Racials then if S.ArcaneTorrent:IsCastable()and h:IsInMeleeRange(8)and g:EnergyDeficitPredicted()>15+ai then if s(S.ArcaneTorrent,nil)then an=155145;return"Cast Arcane Torrent"end end;if S.ArcanePulse:IsCastable()and h:IsInMeleeRange(8)then if s(S.ArcanePulse,nil)then an=260364;return"Cast Arcane Pulse"end end;if S.LightsJudgment:IsCastable()and h:IsInMeleeRange(8)then if s(S.LightsJudgment,nil)then an=255647;return"Cast Lights Judgment"end end;if S.BagofTricks:IsCastable()and h:IsInMeleeRange(8)then if s(S.BagofTricks,nil)then an=312411;return"Cast Bag of Tricks"end end end;if S.Mutilate:IsCastable()and Y then if s(S.PoolEnergy)then shadowcast=9999999999;return"Normal Pooling"end end end end;local function bl()S.Deathmark:RegisterAuraTracking()S.Sepsis:RegisterAuraTracking()end;function ReturnSpellAss()if an==0 then return 0 else return an end end;function ReturnSpellMOAss()if ao==0 then return 0 else return ao end end;p.SetAPL(259,bi,bl)