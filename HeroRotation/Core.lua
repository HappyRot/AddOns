local a,b=...local c=HeroLib;local d,e=HeroCache,c.Utils;local f=c.Unit;local g=f.Player;local h=f.Target;local i=c.Spell;local j=c.Item;local k=math.min;local print=print;local select=select;local l=string.lower;local strsplit=strsplit;local tostring=tostring;local m={General=b.GUISettings.General}function b.Print(...)if not m.General.SilentMode then print("[|cFFFF6600Hero Rotation|r]",...)end end;b.APLs={}b.APLInits={}function b.SetAPL(n,o,p)b.APLs[n]=o;b.APLInits[n]=p end;function b.GetTexture(q)local r=q.SpellID;if r then local s=d.Persistent.Texture.Spell;if not s[r]then if r>=999900 then s[r]="Interface\\Addons\\HeroRotation\\Textures\\"..tostring(r)elseif q.TextureSpellID then s[r]=GetSpellTexture(q.TextureSpellID)else s[r]=GetSpellTexture(r)end end;return s[r]end;local t=q.ItemID;if t then local s=d.Persistent.Texture.Item;if not s[t]then local u,u,u,u,u,u,u,u,u,v=GetItemInfo(t)s[t]=v end;return s[t]end end;local w=i(61304)local x,y,z;local function A(q,B,C)local D,E;local F=GetTime()if g:IsCasting()or g:IsChanneling()then D=g:CastStart()E=g:CastDuration()else D,E=w:CooldownInfo()end;if x~=q then x=q;y=F;z=0 end;if B then local G;if C then G=C else G=g.TimeToXResourceMap[q:CostInfo(nil,"type")](q:Cost())end;if G and G>0 then if G>D+E-F then local H=F-y+G;if z==0 and H>0.25 or z>H or H-z>0.5 then z=H end;D=y;E=z end end end;if D+E<F then D=0;E=0;x=nil end;b.MainIconFrame:SetCooldown(D,E)end;b.CastOffGCDOffset=1;function b.Cast(q,I,J,K,C)local L=b.GetTexture(q)local M=not b.GUISettings.General.HideKeyBinds and c.Action.TextureHotKey(L)if I or J=="Cooldown"then if b.CastOffGCDOffset==1 or b.CastOffGCDOffset==2 and b.SmallIconFrame:GetIcon(1)~=L then b.SmallIconFrame:ChangeIcon(b.CastOffGCDOffset,L,M,K)b.CastOffGCDOffset=b.CastOffGCDOffset+1;q.LastDisplayTime=GetTime()return false end elseif J=="Suggested"then b.CastSuggested(q,K)elseif J=="SuggestedRight"then b.CastRightSuggested(q,K)else local N=999910;local O=q.SpellID==N or q:IsUsable()local P=J=="Pooling"local K=K or false;b.MainIconFrame:ChangeIcon(L,M,O,K)A(q,P,C)q.LastDisplayTime=GetTime()return true end;return nil end;function b.CastAnnotated(q,I,Q)local R=b.Cast(q,I)if not I then b.MainIconFrame:OverlayText(Q)end;return R end;function b.CastPooling(q,C,K)return b.Cast(q,false,"Pooling",K,C)end;local S,T,U,V;b.MaxQueuedCasts=3;local function W(...)S={...}T=k(#S,b.MaxQueuedCasts)U={}V={}for X=1,T do U[X]=b.GetTexture(S[X])S[X].LastDisplayTime=GetTime()V[X]=not b.GUISettings.General.HideKeyBinds and c.Action.TextureHotKey(U[X])end;b.MainIconFrame:ChangeIcon(U[1],V[1],S[1]:IsUsable())b.MainIconFrame:SetupParts(U,V)end;function b.CastQueue(...)W(...)A()return"Should Return"end;function b.CastQueuePooling(C,...)W(...)if C then A(S[1],true,C)else local Y,Z=nil,0;for X=1,#S do if S[X]:Cost()>Z then Z=S[X]:Cost()Y=S[X]end end;A(Y,true)end;return"Should Return"end;b.CastLeftOffset=1;function b.CastLeftCommon(q)local _=b.GetTexture(q)local M=not b.GUISettings.General.HideKeyBinds and c.Action.TextureHotKey(_)b.LeftIconFrame:ChangeIcon(_,M)b.CastLeftOffset=b.CastLeftOffset+1;q.LastDisplayTime=GetTime()end;function b.CastLeft(q)if b.CastLeftOffset==1 then b.CastLeftCommon(q)end;return false end;function b.CastLeftNameplate(a0,q)if b.CastLeftOffset==1 and b.Nameplate.AddIcon(a0,q)then b.CastLeftCommon(q)end;return false end;b.CastSuggestedOffset=1;function b.CastSuggested(q,K)if b.CastSuggestedOffset==1 then local _=b.GetTexture(q)local M=not b.GUISettings.General.HideKeyBinds and c.Action.TextureHotKey(_)b.SuggestedIconFrame:ChangeIcon(_,M,K)b.CastSuggestedOffset=b.CastSuggestedOffset+1;q.LastDisplayTime=GetTime()end;return false end;b.CastRightSuggestedOffset=1;function b.CastRightSuggested(q,K)if b.CastRightSuggestedOffset==1 then local _=b.GetTexture(q)local M=not b.GUISettings.General.HideKeyBinds and c.Action.TextureHotKey(_)b.RightSuggestedIconFrame:ChangeIcon(_,M,K)b.CastRightSuggestedOffset=b.CastRightSuggestedOffset+1;q.LastDisplayTime=GetTime()end;return false end;function b.CmdHandler(a1)local a2,a3,a4=strsplit(" ",l(a1))if a2=="cds"then HeroRotationCharDB.Toggles[1]=not HeroRotationCharDB.Toggles[1]b.ToggleIconFrame:UpdateButtonText(1)b.Print("CDs are now "..(HeroRotationCharDB.Toggles[1]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="aoe"then HeroRotationCharDB.Toggles[2]=not HeroRotationCharDB.Toggles[2]b.ToggleIconFrame:UpdateButtonText(2)b.Print("AoE is now "..(HeroRotationCharDB.Toggles[2]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="toggle"then HeroRotationCharDB.Toggles[3]=not HeroRotationCharDB.Toggles[3]b.ToggleIconFrame:UpdateButtonText(3)b.Print("HeroRotation is now "..(HeroRotationCharDB.Toggles[3]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="covenants"then HeroRotationCharDB.Toggles[4]=not HeroRotationCharDB.Toggles[4]b.ToggleIconFrame:UpdateButtonText(4)b.Print("Covenants are now "..(HeroRotationCharDB.Toggles[4]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="smallcds"then HeroRotationCharDB.Toggles[5]=not HeroRotationCharDB.Toggles[5]b.ToggleIconFrame:UpdateButtonText(5)b.Print("Small Cooldowns are now "..(HeroRotationCharDB.Toggles[5]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="opener"then HeroRotationCharDB.Toggles[6]=not HeroRotationCharDB.Toggles[6]b.ToggleIconFrame:UpdateButtonText(6)b.Print("Opener is now "..(HeroRotationCharDB.Toggles[6]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="unlock"then b.MainFrame:Unlock()b.Print("HeroRotation UI is now |cff00ff00unlocked|r.")elseif a2=="lock"then b.MainFrame:Lock()b.Print("HeroRotation UI is now |cffff0000locked|r.")elseif a2=="scale"then if a3 and a4 then a4=tonumber(a4)if a4 and type(a4)=="number"and a4>0 and a4<=10 then if a3=="ui"then b.MainFrame:ResizeUI(a4)elseif a3=="buttons"then b.MainFrame:ResizeButtons(a4)elseif a3=="all"then b.MainFrame:ResizeUI(a4)b.MainFrame:ResizeButtons(a4)else b.Print("Invalid |cff88ff88[Type]|r for Scale.")b.Print("Should be |cff8888ff/hr scale|r |cff88ff88[Type]|r |cffff8888[Size]|r.")b.Print("Type accepted are |cff88ff88ui|r, |cff88ff88buttons|r, |cff88ff88all|r.")end else b.Print("Invalid |cffff8888[Size]|r for Scale.")b.Print("Should be |cff8888ff/hr scale|r |cff88ff88[Type]|r |cffff8888[Size]|r.")b.Print("Size accepted are |cffff8888number > 0 and <= 10|r.")end else b.Print("Invalid arguments for Scale.")b.Print("Should be |cff8888ff/hr scale|r |cff88ff88[Type]|r |cffff8888[Size]|r.")b.Print("Type accepted are |cff88ff88ui|r, |cff88ff88buttons|r, |cff88ff88all|r.")b.Print("Size accepted are |cffff8888number > 0 and <= 10|r.")end elseif a2=="resetbuttons"then b.ToggleIconFrame:ResetAnchor()elseif a2=="help"then b.Print("|cffffff00--[Toggles]--|r")b.Print("  On/Off: |cff8888ff/hr toggle|r")b.Print("  CDs: |cff8888ff/hr cds|r")b.Print("  AoE: |cff8888ff/hr aoe|r")b.Print("|cffffff00--[User Interface]--|r")b.Print("  UI Lock: |cff8888ff/hr lock|r")b.Print("  UI Unlock: |cff8888ff/hr unlock|r")b.Print("  UI Scale: |cff8888ff/hr scale|r |cff88ff88[Type]|r |cffff8888[Size]|r")b.Print("    [Type]: |cff88ff88ui|r, |cff88ff88buttons|r, |cff88ff88all|r")b.Print("    [Size]: |cffff8888number > 0 and <= 10|r")b.Print("  Button Anchor Reset : |cff8888ff/hr resetbuttons|r")elseif a2=="holdaotd"then HeroRotationCharDB.Toggles[10]=not HeroRotationCharDB.Toggles[10]b.Print("Army of the Dead is now "..(HeroRotationCharDB.Toggles[10]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="holdsacpac"then HeroRotationCharDB.Toggles[11]=not HeroRotationCharDB.Toggles[11]b.Print("Sacrifical Pact is now "..(HeroRotationCharDB.Toggles[11]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="stopautoswap"then HeroRotationCharDB.Toggles[12]=not HeroRotationCharDB.Toggles[12]b.Print("Auto Swap is now "..(HeroRotationCharDB.Toggles[12]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="amz"then HeroRotationCharDB.Toggles[13]=not HeroRotationCharDB.Toggles[13]b.Print("Anti-Magic Zone Queue is now "..(HeroRotationCharDB.Toggles[13]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="deathgrip"then HeroRotationCharDB.Toggles[14]=not HeroRotationCharDB.Toggles[14]b.Print("Death Grip Queue is now "..(HeroRotationCharDB.Toggles[14]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdpot"then HeroRotationCharDB.Toggles[15]=not HeroRotationCharDB.Toggles[15]b.Print("DPS Pots are now "..(HeroRotationCharDB.Toggles[15]and"|cffff0000disabled|r."or"|cff00ff00enabled|r. Requires Show:Potions checked in settings"))elseif a2=="asphyxiate"then HeroRotationCharDB.Toggles[16]=not HeroRotationCharDB.Toggles[16]b.Print("Asphyxiate Queue is now "..(HeroRotationCharDB.Toggles[16]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdweapon"then HeroRotationCharDB.Toggles[17]=not HeroRotationCharDB.Toggles[17]b.Print("Weapon Extra Use is now "..(HeroRotationCharDB.Toggles[17]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="funnelaoe"then HeroRotationCharDB.Toggles[20]=not HeroRotationCharDB.Toggles[20]b.Print("Funnel AoE is now "..(HeroRotationCharDB.Toggles[20]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="holdvanish"then HeroRotationCharDB.Toggles[21]=not HeroRotationCharDB.Toggles[21]b.Print("Vanish is now "..(HeroRotationCharDB.Toggles[21]and"|cffff0000disabled|r."or"|cff00ff00enabled|r. Requires Use Vanish checked in settings"))elseif a2=="cheapshot"then HeroRotationCharDB.Toggles[22]=not HeroRotationCharDB.Toggles[22]b.Print("Cheap Shot Queue is now "..(HeroRotationCharDB.Toggles[22]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="kidney"then HeroRotationCharDB.Toggles[23]=not HeroRotationCharDB.Toggles[23]b.Print("Kidney Shot Queue is now "..(HeroRotationCharDB.Toggles[23]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="blind"then HeroRotationCharDB.Toggles[24]=not HeroRotationCharDB.Toggles[24]b.Print("Blind Queue is now "..(HeroRotationCharDB.Toggles[24]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="sap"then HeroRotationCharDB.Toggles[25]=not HeroRotationCharDB.Toggles[25]b.Print("Sap Queue is now "..(HeroRotationCharDB.Toggles[25]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="shurikentornado"then HeroRotationCharDB.Toggles[26]=not HeroRotationCharDB.Toggles[26]b.Print("Shuriken Tornado Queue is now "..(HeroRotationCharDB.Toggles[26]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="feint"then HeroRotationCharDB.Toggles[27]=not HeroRotationCharDB.Toggles[27]b.Print("Feint Queue is now "..(HeroRotationCharDB.Toggles[27]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="flagellation"then HeroRotationCharDB.Toggles[28]=not HeroRotationCharDB.Toggles[28]b.Print("Flagellation Queue is now "..(HeroRotationCharDB.Toggles[28]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdshurikentornado"then HeroRotationCharDB.Toggles[29]=not HeroRotationCharDB.Toggles[29]b.Print("Shuriken Tornado is now "..(HeroRotationCharDB.Toggles[29]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="racial"then HeroRotationCharDB.Toggles[30]=not HeroRotationCharDB.Toggles[30]b.Print("Racial Ability Queue is now "..(HeroRotationCharDB.Toggles[30]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdwdp"then HeroRotationCharDB.Toggles[31]=not HeroRotationCharDB.Toggles[31]b.Print("Whirling Dragon Punch is now "..(HeroRotationCharDB.Toggles[31]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="holdfsk"then HeroRotationCharDB.Toggles[32]=not HeroRotationCharDB.Toggles[32]b.Print("Flying Serpant Kick is now "..(HeroRotationCharDB.Toggles[32]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="holdfof"then HeroRotationCharDB.Toggles[33]=not HeroRotationCharDB.Toggles[33]b.Print("Fist of Fury is now "..(HeroRotationCharDB.Toggles[33]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="legsweep"then HeroRotationCharDB.Toggles[34]=not HeroRotationCharDB.Toggles[34]b.Print("Leg Sweep Queue is now "..(HeroRotationCharDB.Toggles[34]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="paralysis"then HeroRotationCharDB.Toggles[35]=not HeroRotationCharDB.Toggles[35]b.Print("Paralysis Queue is now "..(HeroRotationCharDB.Toggles[35]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="ringofpeace"then HeroRotationCharDB.Toggles[36]=not HeroRotationCharDB.Toggles[36]b.Print("Ring of Peace Queue is now "..(HeroRotationCharDB.Toggles[36]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="bonedust"then HeroRotationCharDB.Toggles[37]=not HeroRotationCharDB.Toggles[37]b.Print("Bone Dust Brew Queue is now "..(HeroRotationCharDB.Toggles[37]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="cancelfof"then HeroRotationCharDB.Toggles[38]=not HeroRotationCharDB.Toggles[38]b.Print("Cancelling of Fists of Fury is now "..(HeroRotationCharDB.Toggles[38]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="holdtod"then HeroRotationCharDB.Toggles[39]=not HeroRotationCharDB.Toggles[39]b.Print("Touch of Death is now "..(HeroRotationCharDB.Toggles[39]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="holdmovement"then HeroRotationCharDB.Toggles[40]=not HeroRotationCharDB.Toggles[40]b.Print("Fel Rush and Vengeful Retreat are now "..(HeroRotationCharDB.Toggles[40]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="imprison"then HeroRotationCharDB.Toggles[41]=not HeroRotationCharDB.Toggles[41]b.Print("Imprison Queue is now "..(HeroRotationCharDB.Toggles[41]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdimmolation"then HeroRotationCharDB.Toggles[42]=not HeroRotationCharDB.Toggles[42]b.Print("Immolation Aura is now "..(HeroRotationCharDB.Toggles[42]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="holdfelblade"then HeroRotationCharDB.Toggles[43]=not HeroRotationCharDB.Toggles[43]b.Print("Fel Blade is now "..(HeroRotationCharDB.Toggles[43]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="consumemagic"then HeroRotationCharDB.Toggles[44]=not HeroRotationCharDB.Toggles[44]b.Print("Consume Magic is now "..(HeroRotationCharDB.Toggles[44]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="feleruption"then HeroRotationCharDB.Toggles[45]=not HeroRotationCharDB.Toggles[45]b.Print("Fel Eruption Queue is now "..(HeroRotationCharDB.Toggles[45]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="chaosnova"then HeroRotationCharDB.Toggles[46]=not HeroRotationCharDB.Toggles[46]b.Print("Chaos Nova Queue is now "..(HeroRotationCharDB.Toggles[46]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdeyebeam"then HeroRotationCharDB.Toggles[47]=not HeroRotationCharDB.Toggles[47]b.Print("Eye Beam is now "..(HeroRotationCharDB.Toggles[47]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="felrush"then HeroRotationCharDB.Toggles[48]=not HeroRotationCharDB.Toggles[48]b.Print("Fel Rush Queue is now "..(HeroRotationCharDB.Toggles[48]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="darkness"then HeroRotationCharDB.Toggles[49]=not HeroRotationCharDB.Toggles[49]b.Print("Darkness Queue is now "..(HeroRotationCharDB.Toggles[49]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="gouge"then HeroRotationCharDB.Toggles[50]=not HeroRotationCharDB.Toggles[50]b.Print("Gouge Queue is now "..(HeroRotationCharDB.Toggles[50]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="bladerushmelee"then HeroRotationCharDB.Toggles[51]=not HeroRotationCharDB.Toggles[51]b.Print("Blade Rush Melee Only is now "..(HeroRotationCharDB.Toggles[51]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="holdkillingspree"then HeroRotationCharDB.Toggles[52]=not HeroRotationCharDB.Toggles[52]b.Print("Killing Spree is now "..(HeroRotationCharDB.Toggles[52]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="grapplinghook"then HeroRotationCharDB.Toggles[53]=not HeroRotationCharDB.Toggles[53]b.Print("Grappling Hook Queue is now "..(HeroRotationCharDB.Toggles[53]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdshiv"then HeroRotationCharDB.Toggles[54]=not HeroRotationCharDB.Toggles[54]b.Print("Shiv dispell is now "..(HeroRotationCharDB.Toggles[54]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="forceaoe"then HeroRotationCharDB.Toggles[60]=not HeroRotationCharDB.Toggles[60]b.Print("ForceAoE is now "..(HeroRotationCharDB.Toggles[60]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="massdispel"then HeroRotationCharDB.Toggles[61]=not HeroRotationCharDB.Toggles[61]b.Print("Mass Dispel Queue is now "..(HeroRotationCharDB.Toggles[61]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="shackleundead"then HeroRotationCharDB.Toggles[62]=not HeroRotationCharDB.Toggles[62]b.Print("Shackle Undead Queue is now "..(HeroRotationCharDB.Toggles[62]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="startweave"then HeroRotationCharDB.Toggles[70]=not HeroRotationCharDB.Toggles[70]b.Print("Weaving is now "..(HeroRotationCharDB.Toggles[70]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="holdincarn"then HeroRotationCharDB.Toggles[71]=not HeroRotationCharDB.Toggles[71]b.Print("Incarn/Berserk is now "..(HeroRotationCharDB.Toggles[71]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="autotaunt"then HeroRotationCharDB.Toggles[72]=not HeroRotationCharDB.Toggles[72]b.Print("AutoTaunt is now "..(HeroRotationCharDB.Toggles[72]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="vortex"then HeroRotationCharDB.Toggles[73]=not HeroRotationCharDB.Toggles[73]b.Print("Ursol's Vortex Queue is now "..(HeroRotationCharDB.Toggles[73]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="typhoon"then HeroRotationCharDB.Toggles[74]=not HeroRotationCharDB.Toggles[74]b.Print("Typhoon Queue is now "..(HeroRotationCharDB.Toggles[74]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="stampedingroar"then HeroRotationCharDB.Toggles[75]=not HeroRotationCharDB.Toggles[75]b.Print("Stampeding Roar Queue is now "..(HeroRotationCharDB.Toggles[75]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="incapacitatingroar"then HeroRotationCharDB.Toggles[76]=not HeroRotationCharDB.Toggles[76]b.Print("Incapacitating Roar Queue is now "..(HeroRotationCharDB.Toggles[76]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="mightybash"then HeroRotationCharDB.Toggles[77]=not HeroRotationCharDB.Toggles[77]b.Print("Mighty Bash Queue is now "..(HeroRotationCharDB.Toggles[77]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="zoomzoom"then HeroRotationCharDB.Toggles[78]=not HeroRotationCharDB.Toggles[78]b.Print("ZoomZoom Mode is now "..(HeroRotationCharDB.Toggles[78]and"|cff00ff00enabled|r."or"|cffff0000disabled|r."))elseif a2=="entanglingroot"then HeroRotationCharDB.Toggles[79]=not HeroRotationCharDB.Toggles[79]b.Print("Entangling Root Queue is now "..(HeroRotationCharDB.Toggles[79]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="gorefiend"then HeroRotationCharDB.Toggles[80]=not HeroRotationCharDB.Toggles[80]b.Print("Gorefiend's Grasp Queue is now "..(HeroRotationCharDB.Toggles[80]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="controlundead"then HeroRotationCharDB.Toggles[81]=not HeroRotationCharDB.Toggles[81]b.Print("Control Undead Queue is now "..(HeroRotationCharDB.Toggles[81]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holddancingruneweapon"then HeroRotationCharDB.Toggles[82]=not HeroRotationCharDB.Toggles[82]b.Print("Dancing Rune Weapon is now "..(HeroRotationCharDB.Toggles[82]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="holddeathanddecay"then HeroRotationCharDB.Toggles[83]=not HeroRotationCharDB.Toggles[83]b.Print("Death and Decay is now "..(HeroRotationCharDB.Toggles[83]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="bloodboil"then HeroRotationCharDB.Toggles[84]=not HeroRotationCharDB.Toggles[84]b.Print("Blood Boil Queue is now "..(HeroRotationCharDB.Toggles[84]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdearthelemental"then HeroRotationCharDB.Toggles[90]=not HeroRotationCharDB.Toggles[90]b.Print("Earth Elemental is now "..(HeroRotationCharDB.Toggles[90]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="capacitortotem"then HeroRotationCharDB.Toggles[91]=not HeroRotationCharDB.Toggles[91]b.Print("Capacitor Totem Queue is now "..(HeroRotationCharDB.Toggles[91]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="healingstreamtotem"then HeroRotationCharDB.Toggles[92]=not HeroRotationCharDB.Toggles[92]b.Print("Healing Stream Totem Queue is now "..(HeroRotationCharDB.Toggles[92]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="tremortotem"then HeroRotationCharDB.Toggles[93]=not HeroRotationCharDB.Toggles[93]b.Print("Tremor Stream Totem Queue is now "..(HeroRotationCharDB.Toggles[93]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="windrushtotem"then HeroRotationCharDB.Toggles[94]=not HeroRotationCharDB.Toggles[94]b.Print("Wind Rush Totem Queue is now "..(HeroRotationCharDB.Toggles[94]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="hex"then HeroRotationCharDB.Toggles[95]=not HeroRotationCharDB.Toggles[95]b.Print("Hex Queue is now "..(HeroRotationCharDB.Toggles[95]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="faetransfusion"then HeroRotationCharDB.Toggles[96]=not HeroRotationCharDB.Toggles[96]b.Print("Fae Transfusion Queue is now "..(HeroRotationCharDB.Toggles[96]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="usepurge"then HeroRotationCharDB.Toggles[97]=not HeroRotationCharDB.Toggles[97]b.Print("Purge Use is now "..(HeroRotationCharDB.Toggles[97]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdfrozenorb"then HeroRotationCharDB.Toggles[100]=not HeroRotationCharDB.Toggles[100]b.Print("Frozen Orb is now "..(HeroRotationCharDB.Toggles[100]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="holdfrostwyrm"then HeroRotationCharDB.Toggles[110]=not HeroRotationCharDB.Toggles[110]b.Print("Frostwyrm's Fury is now "..(HeroRotationCharDB.Toggles[110]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="bindingshot"then HeroRotationCharDB.Toggles[120]=not HeroRotationCharDB.Toggles[120]b.Print("Binding Shot Queue is now "..(HeroRotationCharDB.Toggles[120]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="freezingtrap"then HeroRotationCharDB.Toggles[121]=not HeroRotationCharDB.Toggles[121]b.Print("Freezing Trap Queue is now "..(HeroRotationCharDB.Toggles[121]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="intimidation"then HeroRotationCharDB.Toggles[122]=not HeroRotationCharDB.Toggles[122]b.Print("Intimidation Queue is now "..(HeroRotationCharDB.Toggles[122]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="flare"then HeroRotationCharDB.Toggles[123]=not HeroRotationCharDB.Toggles[123]b.Print("Flare Queue is now "..(HeroRotationCharDB.Toggles[123]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="tartrap"then HeroRotationCharDB.Toggles[124]=not HeroRotationCharDB.Toggles[124]b.Print("Tar Trap Queue is now "..(HeroRotationCharDB.Toggles[124]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdmisdirection"then HeroRotationCharDB.Toggles[125]=not HeroRotationCharDB.Toggles[125]b.Print("Misdirection is now "..(HeroRotationCharDB.Toggles[125]and"|cffff0000disabled|r."or"|cff00ff00enabled|r. (Requires AutoMisdirect checked in settings)"))elseif a2=="huntersmark"then HeroRotationCharDB.Toggles[140]=not HeroRotationCharDB.Toggles[140]b.Print("Hunter's Mark Queue is now "..(HeroRotationCharDB.Toggles[140]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdbombs"then HeroRotationCharDB.Toggles[141]=not HeroRotationCharDB.Toggles[141]b.Print("Wildfire Bombs are now "..(HeroRotationCharDB.Toggles[141]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="holdtranq"then HeroRotationCharDB.Toggles[142]=not HeroRotationCharDB.Toggles[142]b.Print("Tranqualizing Shot is now "..(HeroRotationCharDB.Toggles[142]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="shadowfury"then HeroRotationCharDB.Toggles[150]=not HeroRotationCharDB.Toggles[150]b.Print("Shadowfury Queue is now "..(HeroRotationCharDB.Toggles[150]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="healooc"then HeroRotationCharDB.Toggles[160]=not HeroRotationCharDB.Toggles[160]b.Print("Healing from OOC is now "..(HeroRotationCharDB.Toggles[160]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="ohshit"then HeroRotationCharDB.Toggles[161]=not HeroRotationCharDB.Toggles[161]b.Print("Healing CD Rotation has "..(HeroRotationCharDB.Toggles[161]and"|cff00ff00Started|r."or"|cffff0000Completed|r."))elseif a2=="vespertotem"then HeroRotationCharDB.Toggles[162]=not HeroRotationCharDB.Toggles[162]b.Print("Vesper Totem Queue has "..(HeroRotationCharDB.Toggles[162]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="holdpurify"then HeroRotationCharDB.Toggles[163]=not HeroRotationCharDB.Toggles[163]b.Print("Purify Spirit is now "..(HeroRotationCharDB.Toggles[163]and"|cffff0000disabled|r."or"|cff00ff00enabled|r."))elseif a2=="purifyspirit"then HeroRotationCharDB.Toggles[164]=not HeroRotationCharDB.Toggles[164]b.Print("Purify Spirit Queue has "..(HeroRotationCharDB.Toggles[164]and"|cff00ff00on|r."or"|cffff0000off|r."))elseif a2=="stopdps"then HeroRotationCharDB.Toggles[165]=not HeroRotationCharDB.Toggles[165]b.Print("DPS Rotation is now "..(HeroRotationCharDB.Toggles[165]and"|cffff0000off|r."or"|cff00ff00on|r."))elseif a2=="stopheals"then HeroRotationCharDB.Toggles[166]=not HeroRotationCharDB.Toggles[166]b.Print("Healing Rotation has "..(HeroRotationCharDB.Toggles[166]and"|cffff0000off|r."or"|cff00ff00on|r."))else b.Print("Invalid arguments.")b.Print("Type |cff8888ff/hr help|r for more infos.")end end;SLASH_HEROROTATION1="/hr"SLASH_HEROROTATION2="/ar"SlashCmdList["HEROROTATION"]=b.CmdHandler;function b.CDsON()return HeroRotationCharDB.Toggles[1]end;do local a5={[120651]=true}function b.AoEON()return HeroRotationCharDB.Toggles[2]and not a5[h:NPCID()]end end;function b.ON()return HeroRotationCharDB.Toggles[3]end;function b.Locked()return HeroRotationDB.Locked end